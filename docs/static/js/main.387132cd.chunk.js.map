{"version":3,"sources":["components/AddPlayer.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddPlayer","setPlayer","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","player","type","onChange","target","value","prototype","ProtoTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","console","log","then","imgs","useFetchGifs","GifExpertApp","players","setPlayers","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAIA,SAASA,EAAT,GAAiC,IAAbC,EAAY,EAAZA,UAAY,EAEQC,mBAAS,IAFjB,mBAErBC,EAFqB,KAETC,EAFS,KAiB5B,OACI,mCACA,sBAAMC,SAfS,SAACC,GAChBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAU,SAAAS,GAAM,OAAOP,GAAP,mBAAuBO,OACvCN,EAAc,MAUlB,SACI,uBACIO,KAAK,OACLC,SATa,SAACN,GACtBF,EAAcE,EAAEO,OAAOC,QASfA,MAAOX,QAQvBH,EAAUe,UAAU,CAChBd,UAAWe,IAAWC,KAAKC,YAOhBlB,Q,+BC3CFmB,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,mDACqCC,UAAUH,GAD/C,gEAEDI,MAAMF,GAFL,cAEbG,EAFa,gBAGEA,EAAIC,OAHN,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAQ,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYXM,GAZW,4CAAH,sDCWLO,EATK,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAC7B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCoBDO,EAtBC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDJ,SAACA,GAAc,IAAD,EACZlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAmBtC,OAZCC,qBAAU,WACNC,QAAQC,IAAIzB,GACbD,EAAQC,GACH0B,MAAK,SAAAC,GACFL,EAAS,CACLf,KAAMoB,EACNP,SAAS,SAGtB,CAACpB,IAGGqB,EDjBwBO,CAAa5B,GAAhCa,EADgB,EACrBN,KAAaa,EADQ,EACRA,QAEpB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IACnD,sBAAKgB,UAAU,YAAf,UACKI,GAAW,mBAAGJ,UAAU,oCAAb,yBACZ,6BAEQH,EAAOJ,KAAI,SAAAC,GACP,OACI,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,gBEanCkB,EAzBM,WAAO,IAAD,EACO/C,mBAAS,CAAC,WADjB,mBAChBgD,EADgB,KACPC,EADO,KAQvB,OACI,gCACI,gDACA,cAAC,EAAD,CAAWlD,UAAWkD,IACtB,uBAEA,6BAEQD,EAAQrB,KAAI,SAACnB,EAAQ0C,GACjB,OAAO,cAAC,EAAD,CAAiBhC,SAAUV,GAAb0C,Y,MChB7CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.387132cd.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport ProtoTypes from 'prop-types'\r\n\r\n\r\nfunction AddPlayer({setPlayer}) {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setPlayer(player => [  inputValue,  ...player])\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    const handleInputValue = (e)=> {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                onChange={handleInputValue}\r\n                value={inputValue}\r\n            />\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nAddPlayer.prototype={\r\n    setPlayer: ProtoTypes.func.isRequired\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default AddPlayer\r\n","export const getGifs = async(category) => { \r\n    const url = `https://api.giphy.com/v1/gifs/search?&q=+${encodeURI(category)}+&limit=10&api_key=itJfikDJDEZclImf1TWN0yWOxl1Ot8Sn`;\r\n    const res = await fetch(url)\r\n    const {data} = await res.json();\r\n\r\n    const gifs = data.map( img => { \r\n        return ({\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        })\r\n    })\r\n    return (gifs)\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem'\r\n\r\nconst GifGrid = ({category}) => {\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n        <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n        <div className='card-grid' >\r\n            {loading && <p className=' animate__animated animate__flash'>Loading... </p>}\r\n            <ol>\r\n                {\r\n                    images.map(img => {\r\n                        return(\r\n                            <GifGridItem key={img.id} {...img}/>\r\n                            )\r\n                    })\r\n                }\r\n            </ol>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n\r\n     useEffect(()=>{\r\n         console.log(category)\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport AddPlayer from './components/AddPlayer'\r\nimport GifGrid from './components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n    const [players, setPlayers] = useState(['Aguero'])\r\n    \r\n    // const handleAdd = ()=>{\r\n    //     const anotherPlayer = 'Stones';\r\n    //     setPlayers([...players, anotherPlayer])\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Gif Expert app</h2>\r\n            <AddPlayer setPlayer={setPlayers} />\r\n            <hr/>\r\n            {/* <button onClick={handleAdd}>Add player</button> */}\r\n            <ol>\r\n                {\r\n                    players.map((player, i) => {\r\n                        return <GifGrid key={i} category={player} />\r\n                    })\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}